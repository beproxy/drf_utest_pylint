version: '3.9'

services:
# settings for database
  database:
    container_name: database
    image: postgres:10-alpine
    restart: always
    networks:
      default:
        ipv4_address: ${IPV4_DATABASE}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - ${DB_PORTS}

# settings for backend
  backend:
    container_name: backend
    image: backend_server
    restart: always
    depends_on:
      - database
    build:
      context: .
      dockerfile: ./Dockerfile_back_deploy
      args:
        ROOT_USER: ${ROOT_USER}
    command: gunicorn -w 4 settings.wsgi -b 0.0.0.0:8000
    networks:
      default:
        ipv4_address: ${IPV4_BACKEND}
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_ENGINE: ${DB_ENGINE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      SETTINGS_FILE: ${SETTINGS_FILE}
    ports:
      - ${BACKEND_PORTS}
    volumes:
      - static-data:/home/${ROOT_USER}/static

# settings for nginx
  proxy:
    container_name: proxy
    image: nginx:stable-alpine
    build:
      context: ./proxy
      args:
        ROOT_USER: ${ROOT_USER}
    restart: always
    ports:
      - ${PROXY_PORTS}
    depends_on:
      - backend
    networks:
      default:
        ipv4_address: ${IPV4_PROXY}
    volumes:
      - static-data:/home/${ROOT_USER}/static
      - ./proxy/default.conf.tpl:/etc/nginx/conf.d/default.conf.tpl
    command: /bin/sh -c "envsubst '$$PROXY_HOST' < /etc/nginx/conf.d/default.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  database:
  static-data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORKS_SUBNET}
          gateway: ${NETWORKS_GATEWAY}
